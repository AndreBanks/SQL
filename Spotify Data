For this project, I downloaded Spotify data from Kaggle.

Then I created a table to insert Spotify data into.

Lastly, I performed analytics on the data using SQL.


#Creating the table: 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

Then I inserted the Spotify Data .csv into the table.

Next, I explored the data using the following SQL.

First I listed the artists and ordered them by popularity.

SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name 
ORDER BY popularity DESC;

Next I determined the average duration and tempo by artist and track name.

SELECT artist_name, track_name, AVG(duration_ms), AVG(tempo)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

Then I determined the 10 least popular artists.

SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity ASC;
LIMIT 10;

Finally, I determined the artists and tracks that had a song key of 7 or fewer.

SELECT artist_name, track_name, song_key
FROM BIT_DB.Spotifydata
WHERE song_key <=7
GROUP BY artist_name, song_key
ORDER BY song_key DESC;
